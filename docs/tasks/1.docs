0. zmienic lokalizacje data.bin z ./ na ./db/data/
1. cachowanie wartości key z conn do serwera tak aby nie brodcastować każdego req na all serwery
2. system auth
3. json_data_type
4. sql_commands
13. auto reconect

--- miej wazne ---
5. ui
6. webDav
7. fs
8. opdja włączenia jakiejś kompresji
9. zamiana zapisu w jsonie na binarke
10. opcja performance-no-limits
    > wczytanie wszystkich key do ramu żeby szybko działało
11. automatyczny backup na innym serweże
12. komendy
    + credits
        > wyświetli liste osob które przyczyniły sie do rozwoju db
        mozna np bedzie po dadaniu perms ludzi ktorzy podejma sie proby crackowania db
13. jeżeli wykonywane jest save() w objekcie z "free_block" to po oznaczeniu w pliku tego bloku jako zajętego
    > można pozwolić na asynchroniczne zapisywanie (na raz można zapisywać w środku pliku i na jego końcu.)

    > opcjonalnie można serwerów z np 4 rdzeniami mieć przygotowane 4 zarezerwowane objekty w pliku tak aby wszystkie 4 mogły na raz dodawać dane
    > i mieć 1 blokcujący się proces (mutex) który przydzielał by te wolne miejsca tak aby żadne dane nie zostały niepoprawnie nadpisane

    > zrobić test dla np 10k wartości przed i po implementacji
14. jako forme kompresji (opcjonalną):
    > dla każdego wpisu robić hasha na podstawie danych, i sprawdzać
    w pliku z hashami / cache czy już takiego nie ma, jak jest to zamiast zapisywać dane dodać tylko odwołanie
    do już zapisanych informacji.
    > jak ktoś będzie chciał edytowac wpis z odwołania to najpierw zamienic odwołanie
    na dane a dopiero potem akcja 
15. obecnie podczas dostępu do pliku jest on blokowany przez mutex.
    można blokować podczas sync save, nie blokować podczas async save
    i pozwolić read na async read dopuki dany blok nie jest w trakcie innej operacji zapisu:

    > BlockManager będzie przechowywał status w jakim miejscu wykonywany jest zapis, jeżeli zapis nie jest
    wykonywany na danym bloku można pozwolić na jego odczyt asynchronicznie

=== todo w ten weekend ===
0, 2 + stream danych + 13
