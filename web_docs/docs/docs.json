[
  {
    "method": "POST",
    "endpoint": "127.0.0.1:5844/save/table/key",
    "description": "save data to db",
    "permissions": "",
    "body": "{data}",
    "headers": "",
    "res": "200 OK",
    "errors": [
      {
        "code": "400",
        "message": "Invalid url args",
        "description": ""
      },
      {
        "code": "400",
        "message": "Invalid body",
        "description": ""
      },
      {
        "code": "405",
        "message": "Method not allowed",
        "description": ""
      },
      {
        "code": "500",
        "message": "Error saving to file",
        "description": "db error when saving data to file"
      },
      {
        "code": "500",
        "message": "Error saving metadata",
        "description": "db error when saving key do file"
      }
    ],
    "category": "API"
  },
  {
    "method": "POST",
    "endpoint": "127.0.0.1:5844/save_encrypted/table/key",
    "description": "encrypt & save data to db",
    "permissions": "",
    "body": "{data}",
    "headers": "{\"Content-Type\":\"text/plain\", \"encryption_key\": \"KEY\"}",
    "res": "200 OK",
    "errors": [
      {
        "code": "400",
        "message": "Invalid url args",
        "description": ""
      },
      {
        "code": "400",
        "message": "Invalid body",
        "description": ""
      },
      {
        "code": "400",
        "message": "db error when encrypting data",
        "description": ""
      },
      {
        "code": "405",
        "message": "Method not allowed",
        "description": ""
      },
      {
        "code": "500",
        "message": "Error saving to file",
        "description": "db error when saving data to file"
      },
      {
        "code": "500",
        "message": "Error saving to map",
        "description": "db error when saving key do file"
      }
    ],
    "category": "API"
  },
  {
    "method": "GET",
    "endpoint": "127.0.0.1:5844/read/table/key",
    "description": "read data from db",
    "permissions": "",
    "body": "",
    "headers": "",
    "res": "{data}",
    "errors": [
      {
        "code": "400",
        "message": "Invalid url args",
        "description": ""
      },
      {
        "code": "400",
        "message": "network manager not initialized",
        "description": "InitNetworkManager() not executed or port was arleady used"
      },
      {
        "code": "400",
        "message": "data not found on any server",
        "description": "data not found"
      },
      {
        "code": "404",
        "message": "Error reading from file",
        "description": "invalid data formating"
      }
    ],
    "category": "API"
  },
  {
    "method": "GET",
    "endpoint": "127.0.0.1:5844/read_encrypted/table/key",
    "description": "read data from db",
    "permissions": "",
    "body": "",
    "headers": "{\"Content-Type\":\"text/plain\", \"encryption_key\": \"KEY\"}",
    "res": "{data}",
    "errors": [
      {
        "code": "400",
        "message": "Invalid url args",
        "description": ""
      },
      {
        "code": "400",
        "message": "network manager not initialized",
        "description": "InitNetworkManager() not executed or port was arleady used"
      },
      {
        "code": "400",
        "message": "data not found on any server",
        "description": "data not found"
      },
      {
        "code": "400",
        "message": "Missing encryption_key header",
        "description": ""
      },
      {
        "code": "404",
        "message": "Error reading from file",
        "description": "invalid data formating"
      },
      {
        "code": "500",
        "message": "Error decryping data",
        "description": "invalid decryption key"
      }
    ],
    "category": "API"
  },
  {
    "method": "GET",
    "endpoint": "127.0.0.1:5844/free/table/key",
    "description": "free data",
    "permissions": "",
    "body": "",
    "headers": "",
    "res": "{data}",
    "errors": [
      {
        "code": "400",
        "message": "Invalid url args",
        "description": ""
      },
      {
        "code": "404",
        "message": "Error retrieving element from map",
        "description": "key not found"
      }
    ],
    "category": "API"
  },
  {
    "method": "GET",
    "endpoint": "127.0.0.1:5844/key_by_regex?regex=*",
    "description": "get list of keys using regex rule",
    "permissions": "",
    "body": "",
    "headers": "",
    "res": "[\"key1\", \"key2\"...]",
    "errors": [
      {
        "code": "405",
        "message": "Method Not Allowed",
        "description": ""
      },
      {
        "code": "400",
        "message": "Missing 'regex' parameter",
        "description": "?regex={regex_rule} not found"
      },
      {
        "code": "400",
        "message": "Invalid 'max' parameter",
        "description": "?max=0 parameter not found, default - 0 = get all"
      },
      {
        "code": "500",
        "message": "Error from GetKeysByRegex",
        "description": "error with regex rule"
      }
    ],
    "category": "API"
  },
  {
    "method": "GET",
    "endpoint": "127.0.0.1:5844/subscriptions/enable",
    "description": "allow user to subscribe to key for 60s after creating auth_key",
    "permissions": "",
    "body": "{\"keys\":\"[\"key\", \"key2\"...]\"}",
    "headers": "",
    "res": "{'auth_key': 'some_uuid_key'}",
    "errors": [
      {
        "code": "400",
        "message": "invalid request",
        "description": "error decoding body or invalid key"
      }
    ],
    "category": "API"
  },
  {
    "method": "GET",
    "endpoint": "127.0.0.1:5844/subscriptions/disable",
    "description": "unsubscribe all users subscribed to specific key",
    "permissions": "",
    "body": "{\"key\":\"some_key\"}",
    "headers": "",
    "res": "200 OK",
    "errors": [
    ],
    "category": "API"
  },
  {
    "markdown": ["api/_subscriptions.md"],
    "method": "WS",
    "endpoint": "ws://127.0.0.1:5845/sub",
    "description": "subscribe by user to key to track live changes",
    "permissions": "everyone",
    "body": "{\"auth_key\": \"some_uuid_key\"}",
    "headers": "",
    "res": "ws conn",
    "errors": [
      {
        "code": "",
        "message": "Upgrade error: {err}",
        "description": ""
      },
      {
        "code": "",
        "message": "Disconnected: {err}",
        "description": ""
      }
    ],
    "category": "API"
  },
  {
    "markdown": ["api/_incTables.md", "api/incTablesSave.md"],
    "method": "POST",
    "endpoint": "127.0.0.1:5844/save_inc/{table}/{key}",
    "description": "save incremental data to db",
    "permissions": "",
    "body": "entry data {any type}",
    "headers": "{\"max_entry_size\": \"size_in_bits\", \"id\": \"id_number\", \"mode\": \"overwrite / append\", \"count_from\": \"top / bottom\" }",
    "res": "{\"id\": \"{int}\"}",
    "errors": [
      {
        "code": "405",
        "message": "-",
        "description": "Method Not Allowed - when req is not POST"
      },
      {
        "code": "400",
        "message": "Invalid url args",
        "description": "table or key param missing"
      },
      {
        "code": "400",
        "message": "Missing size header",
        "description": ""
      },
      {
        "code": "400",
        "message": "Invalid body",
        "description": "when io reader fails to read req body"
      },
      {
        "code": "500",
        "message": "Cannot serialize inc table data: {err}",
        "description": ""
      },
      {
        "code": "500",
        "message": "Cannot read inc table data: {err}",
        "description": "error when reading table data from KV db"
      },
      {
        "code": "500",
        "message": "Cannot deserialize inc table data: {err}",
        "description": ""
      },
      {
        "code": "400",
        "message": "Entry size does not match existing table",
        "description": "when EntrySize from header does not match existing table entry size"
      },
      {
        "code": "400",
        "message": "Body size exceeds entry size",
        "description": ""
      },
      {
        "code": "500",
        "message": "Error saving inc entry: {err}",
        "description": ""
      }
    ],
    "category": "API"
  },
  {
    "markdown": ["api/_subscriptions.md", "api/incTablesRead.md"],
    "method": "GET",
    "endpoint": "127.0.0.1:5844/read_inc/{table}/{key}",
    "description": "read entries from IncTable",
    "permissions": "",
    "body": "",
    "headers": "{\"read_type\": \"by_id / last_entries / first_entries\", \"amount_to_read\": \"{number}\"}",
    "res": "\"[\n {\n \"id\": 0,\n \"data\": \"test entry5\"\n },\n {\n \"id\": 1,\n \"data\": \"test entry10\"\n }\n ]\"",
    "errors": [
      {
        "code": "405",
        "message": "StatusMethodNotAllowed",
        "description": ""
      },
      {
        "code": "400",
        "message": "Invalid URL args",
        "description": "table or key param missing"
      },
      {
        "code": "400",
        "message": "Missing read_type header",
        "description": ""
      },
      {
        "code": "400",
        "message": "Missing id header",
        "description": ""
      },
      {
        "code": "400",
        "message": "Invalid header value",
        "description": "db failed to process {id} into uint64"
      },
      {
        "code": "400",
        "message": "Missing amount_to_read header",
        "description": ""
      },
      {
        "code": "400",
        "message": "Invalid header value",
        "description": "db failed to process {amount} into uint64"
      },
      {
        "code": "400",
        "message": "Error: {err}",
        "description": "fail to read incTable entry data under specified key"
      },
      {
        "code": "500",
        "message": "Cannot deserialize inc table data: {err}",
        "description": ""
      },
      {
        "code": "404",
        "message": "Entry not found",
        "description": "entry with specified {id} not found"
      },
      {
        "code": "404",
        "message": "Entry not found",
        "description": "entry data size is 0"
      },
      {
        "code": "500",
        "message": "Error decoding entry: {err}",
        "description": ""
      },
      {
        "code": "500",
        "message": "Invalid entry size",
        "description": "specified entry size in header dosn't match entry size saved in db"
      },
      {
        "code": "500",
        "message": "Corrupted read: data len=%d not divisible by recordSize=%d",
        "description": "entry data is corupted or missing"
      },
      {
        "code": "500",
        "message": "JSON encode error: {err}",
        "description": ""
      }
    ],
    "category": "API"
  }
]
